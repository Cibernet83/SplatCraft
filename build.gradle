plugins {
    id 'fabric-loom' version '0.6-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
group = project.maven_group

if (System.env.CI == "true") {
    def branch
    branch = System.env.GITHUB_REF
    branch = branch.substring(branch.lastIndexOf("/") + 1)

    version = "${project.mod_version}+a${System.env.GITHUB_RUN_NUMBER}.${branch}-fabric"
} else {
    version = "${project.mod_version}+${project.minecraft_version}-fabric"
}

minecraft {}

repositories {
    maven { url = "https://dl.bintray.com/ladysnake/libs" }
    maven { url = "https://jitpack.io" }
    maven { url = "https://maven.shedaniel.me/" }
    maven { url "https://maven.shadew.net/" }
}

dependencies {
    // base
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_build}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

    modImplementation "me.shedaniel.cloth:cloth-config:${project.cloth_config_version}:fabric"

    modImplementation "io.github.prospector:modmenu:${project.mod_menu_version}"
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cardinal_version}"
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-util:${project.cardinal_version}"
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${project.cardinal_version}"
    include "me.shedaniel.cloth:cloth-config:${project.cloth_config_version}:fabric"
    include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cardinal_version}"
    include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-util:${project.cardinal_version}"
    include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${project.cardinal_version}"

    // runtime utils
    modRuntime "com.github.joaoh1:OkZoomer:${project.okzoomer_version}"
    modRuntime "net.shadew:jedt:${project.jedt_version}"

    modRuntime "com.github.jellysquid3:sodium-fabric:${project.sodium_version}"
    // modRuntime "com.github.jellysquid3:lithium-fabric:${project.lithium_version}"
    modRuntime "com.github.jellysquid3:phosphor-fabric:${project.phosphor_version}"
}

loom {
    accessWidener "src/main/resources/splatcraft.accesswidener"
}

processResources {
    inputs.property "version", project.version

    from (sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from (sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType (JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
// task sourcesJar (type: Jar, dependsOn: classes) {
//     classifier = "sources"
//     from sourceSets.main.allSource
// }

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/splatcraft/splatcraft")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("PASSWORD")
            }
        }
        // uncomment to publish to the local maven
        // mavenLocal()
    }

    publications {
        mavenJava (MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact (jar) {
                builtBy remapJar
            }
            artifact ("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}.jar") {
                builtBy remapJar
            }
            // artifact (sourcesJar) {
            //     builtBy remapSourcesJar
            // }
        }
    }
}
