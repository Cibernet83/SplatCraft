plugins {
    id 'fabric-loom' version '0.8-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
group = project.maven_group

if (System.env.CI == "true") {
    version = "${project.mod_version}+a${System.env.GITHUB_RUN_NUMBER}.${project.minecraft_version}-fabric"
} else {
    version = "${project.mod_version}+${project.minecraft_version}-fabric"
}

minecraft {}

repositories {
    maven { url = "https://jitpack.io/" }
    maven { url = "https://maven.shedaniel.me/" }
    maven { url = "https://maven.shadew.net/" }
    maven { url = "https://maven.dblsaiko.net/" }
    maven { url = "https://maven.terraformersmc.com/releases/" }
    maven { url = "https://server.bbkr.space/artifactory/libs-release/" }
    maven { url = "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/" }
    maven { url = "https://ladysnake.jfrog.io/artifactory/mods/" }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_build}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

    /*
     * COMPATIBILITY
     */

    /*modImplementation ("grondag:canvas-mc116:1.0.+") {
        exclude group: "net.fabricmc"
        exclude group: "net.fabricmc.fabric-api"
        exclude group: "me.shedaniel.cloth"
    }*/
    // modImplementation "com.github.CaffeineMC:sodium-fabric:${project.sodium_version}"

    /*
     * LIBRARIES
     */

    modImplementation "com.github.andantedevs:chord:${project.chord_version}"
    include "com.github.andantedevs:chord:${project.chord_version}"

    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cardinal_version}"
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-util:${project.cardinal_version}"
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${project.cardinal_version}"
    include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cardinal_version}"
    include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-util:${project.cardinal_version}"
    include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${project.cardinal_version}"

    modImplementation "software.bernie.geckolib:geckolib-fabric-${project.geckolib_version}:dev"

    modImplementation "io.github.fablabsmc:bannerpp:${project.bannerpp_version}"
    include "io.github.fablabsmc:bannerpp:${project.bannerpp_version}"

    modImplementation "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"
    include "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"

    modImplementation "com.terraformersmc:modmenu:${project.mod_menu_version}"

    /*
     * RUNTIME UTILITIES
     */

    // modRuntime ("com.github.joaoh1:OkZoomer:${project.okzoomer_version}") { exclude ( group: "me.shedaniel.cloth" ) }
    // modRuntime "net.shadew:jedt:${project.jedt_version}"

    // modRuntime "com.github.CaffeineMC:lithium-fabric:${project.lithium_version}"
    // modRuntime "com.github.CaffeineMC:phosphor-fabric:${project.phosphor_version}"
    // modRuntime "com.github.astei:lazydfu:${project.lazydfu_version}"
}

loom {
    accessWidener "src/main/resources/${project.archives_base_name}.accesswidener"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 16
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
            // artifact(sourcesJar) {
            // builtBy remapSourcesJar
            // }
        }
    }


    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/splatcraft/splatcraft")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("PASSWORD")
            }
        }
    }
}
